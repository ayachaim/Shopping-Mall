<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dev.mapper.ItemsMapperCustom" >
  <select id="queryItemComments" parameterType="Map" resultType="com.dev.pojo.vo.ItemCommentVO">
    SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.spec_name as specName,
        i.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickName
    FROM
        items_comments ic
    LEFT JOIN
        users u
    ON
        ic.user_id = u.id
    WHERE
        ic.item_id = #{paramsMap.itemId}
        <if test="paramsMap.level !=null and paramsMap.level !=''">
          AND ic.comment_level = #{paramsMap.level}
        </if>
  </select>

    <select id="searchItemsSpec" parameterType="Map" resultType="com.dev.pojo.vo.SearchItemsVO">
        SELECT
            i.id as itemId,
            i.item_name as ItemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as minPrice
        FROM
            items i
        LEFT JOIN
            items_img ii
        ON
            i.id = ii.item_id
        LEFT JOIN
            (
            SELECT
                item_id,MIN(price_discount) as priceDiscount
            FROM
                items_spec
            GROUP BY
                item_id
            )
            tempSpec
            ON i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
        <if test="paramsMap.keyWords !=null and paramsMap.keyWords !='' ">
            AND item_name like '%#{paramsMap.keyWords}%'
        </if>
        ORDER BY
        <choose>
            <when test="paramsMap.sort = &quot;sell&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort = &quot;price&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.dev.pojo.vo.SearchItemsVO">
        SELECT
        i.id as itemId,
        i.item_name as ItemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as minPrice
        FROM
        items i
        LEFT JOIN
        items_img ii
        ON
        i.id = ii.item_id
        LEFT JOIN
        (
        SELECT
        item_id,MIN(price_discount) as priceDiscount
        FROM
        items_spec
        GROUP BY
        item_id
        )
        tempSpec
        ON i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        and
        i.cat_id = #{paramsMap.catId}
        ORDER BY
        <choose>
            <when test="paramsMap.sort = &quot;sell&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort = &quot;price&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.dev.pojo.vo.ShopCartVO">
        SELECT
        t_items.id as itemId,
        t_items.item_name as itemName,
        t_items_img.url as itemImgUrl,
        t_items_spec.id as specId,
        t_items_spec.`name` as specName,
        t_items_spec.price_discount as priceDiscount,
        t_items_spec.price_normal as priceNormal
        FROM
        items_spec t_items_spec
        LEFT JOIN
        items t_items
        ON
        t_items.id = t_items_spec.item_id
        LEFT JOIN
        items_img t_items_img
        on
        t_items_img.item_id = t_items.id
        WHERE
        t_items_img.is_main = 1
        AND
        t_items_spec.id IN
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
    </select>

    <insert id="descreaseItemStock">
        update
            items_spec
        set
            stock = stock - #{pendingCounts}
        where
            id = #{specId}
        and
            stock >= #{pendingCounts}

    </insert>
</mapper>